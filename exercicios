    //le aq ou...file:///X:/PROF.%20MARCEL/TURMAS%20DO%20SESI%202023-2/DS1BIT/TURMA%20-%20A/0%20-%20PROJETOS%20E%20TRABALHOS%20BACK-END/Lista%20de%20Exerc%C3%ADcios%20NodeJS.pdf

Lista de Exercícios 
Programação Web Back-End (Node.JS) 
Prof. Marcel 
Obs: Todos os exercícios devem ser criados utilizando o conceito de função 
e modularização de processamentos. 

    Exercício 01 - Um consultório de Nutrição solicitou a você que criasse um
    sistema que faça o cálculo do IMC de uma pessoa 

    Exercício 02 - Criar um sistema que gerencie as médias escolares de uma 
universidade, conforme requisitos abaixo: 
O sistema deve solicitar a entrada dos seguintes dados: 
● Nome do aluno; 
● Nome do professor; 
● Sexo do professor e do aluno; 
● Nome do curso; 
● Nome da disciplina; 
● 4 Notas que podem ser entre 0 e 100; 
Requisitos do Sistema 
o Os valores digitados nas notas devem obrigatoriamente estar entre 
0 e 100, caso algum valor estiver fora desta sequência o sistema 
deverá apresentar um erro; 
o Nenhuma entrada de dados poderá ficar sem preenchimento; 
o Para o sistema apresentar o status de aprovado do aluno a sua 
média deverá ser acima de 70. 
o Caso a média do aluno estiver abaixo de 50 ele estará reprovado; 
o Se a média estiver entre 50 e 69, o aluno estará de exame, e neste 
caso o sistema deverá solicitar a nota que o aluno teve no exame. 
o Para o aluno ser aprovado no exame, a nota do exame e a média 
anterior precisa ficar acima de 60, assim o aluno estará aprovado 
no exame.
o Na exibição do Relatório do aluno as palavras aluno e professor, 
deverá ser exibida conforme o sexo informado. 
▪ Ex: Se o sexo do professor for feminino, deverá aparecer 
professora, caso contrário deverá ser professor. 
▪ Ex: Se o sexo do aluno for feminino, deverá aparecer aluna, 
caso contrário deverá ser aluno. 
A saída do sistema deverá obedecer a seguinte estrutura: 
 Relatório do aluno: 
O aluno [ xxxxxx ] foi [aprovado] na disciplina [ xxxxxxxx ]. 
Curso: xxxxxxxx 
Professor: xxxxxxxx 
Notas do aluno: Nota1, Nota2, Nota3, Nota4, Nota do Exame 
Média Final: xxxxxx 
Média final do Exame: xxxx 

    Exercício 03 - Criar um sistema para gerenciar o cálculo de uma tabuada, 
conforme requisitos abaixo: 
O sistema deverá solicitar as seguintes entradas: 
● A tabuada inicial e tabuada final a ser calculada; 
● O número inicial e final do contador da tabuada; 
Requisitos do Sistema 
● A entrada da tabuada deverá ser entre 2 e 100, não sendo permitido outros 
valores; 
● Nenhuma entrada de dados deverá ficar sem preenchimento; 
● O valor até onde será calculada a tabuada deverá ser entre 1 e 50; 
A saída do sistema deverá obedecer a seguinte estrutura:

Supondo que o usuário coloque: 
 tabuada inicial com 2 e tabuada final com 3 
 contador inicial com 0 e contador final com 2 
Tabuada do [2] 
2 x 0 = 0 
2 x 1 = 2 
2 x 2 = 4 
Tabuada do [3] 
3 x 0 = 0 
3 x 1 = 3 
3 x 2 = 6 

    Exercício 04 - Calcular o Fatorial de um número fornecido pelo usuário, exemplo: 
Fatorial de 3 é 3x2x1 = 6 
Fatorial de 5 é 5x4x3x2x1 = 120 
Requisitos do Sistema 
● O sistema deverá validar as seguintes condições; 
o Não existe fatorial de 0; 
o Se o valor fornecido pelo usuário para calcular for 1, o sistema deve 
informar que não é possível calcular o fatorial, precisa ser um 
número maior do que 1 
● Validação de entrada vazia e tratamento de caracteres inválidos. 

    Exercício 05 - Criar um sistema que gerencie números pares e ímpares
conforme os requisitos abaixo: 
O sistema deverá solicitar as seguintes entradas: 
● Número Inicial; 
● Número Final; 
Requisitos do Sistema 
● O número inicial deverá ser limitado a entrada de valores entre 0 até 500; 
● O número final deverá ser limitado a entrada de valores entre 100 até 1000; 
● O usuário deve obrigatoriamente digitar números nas duas entradas, assim 
não podem ficar vazias; 
● Se o usuário digitar um número inicial MAIOR do que o final o sistema deve 
impedir o cálculo e apresentar uma mensagem de erro para o usuário; 
● O sistema também deve impedir que o usuário digite dois números iguais 
em ambas as entradas; 
● Ao final de cada lista a quantidade de números pares e ímpares calculados 
deverá ser exibida; 
● O sistema deverá apresentar uma sequência de números pares e outra 
sequência de números ímpares; 
A saída do sistema deverá obedecer a seguinte estrutura: 
Supondo que o usuário coloque: 
Número inicial com 2 
Número final com 10 
Lista de números Pares 
2 
4 
6 
8 
Qtde de números encontrados: 4 
Lista de números Impares 
3 
5 
7 
9 
Qtde de números encontrados: 4 
Nova Funcionalidade para o cálculo de par e 
impar 
Após terminar a separação de números pares e ímpares, você pode criar uma forma do usuário 
escolher qual será a separação que ele deseja. Ex: 
 Ele poderá escolher em somente calcular os Pares, ou somente os Ímpares, ou 
calcular ambos (Pares e Ímpares). 